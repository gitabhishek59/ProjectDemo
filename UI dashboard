import dash
from dash import dcc, html
from dash.dependencies import Input, Output
import pandas as pd

# Load your Excel file
excel_file_path = 'path/to/your/excel/file.xlsx'
df_eu = pd.read_excel(excel_file_path, sheet_name='EU')
df_na = pd.read_excel(excel_file_path, sheet_name='NA')
df_apac = pd.read_excel(excel_file_path, sheet_name='APAC')

# Initialize the Dash app
app = dash.Dash(__name__)

# Define the layout of the dashboard
app.layout = html.Div([
    # Dropdown to select sheet
    dcc.Dropdown(
        id='sheet-dropdown',
        options=[
            {'label': 'EU', 'value': 'eu'},
            {'label': 'NA', 'value': 'na'},
            {'label': 'APAC', 'value': 'apac'}
        ],
        value='eu',  # default selected sheet
        style={'width': '50%'}
    ),

    # Display the selected sheet's data
    html.Div(id='data-table'),
])


# Define callback to update the table based on the selected sheet
@app.callback(
    Output('data-table', 'children'),
    [Input('sheet-dropdown', 'value')]
)
def update_table(selected_sheet):
    if selected_sheet == 'eu':
        df = df_eu
    elif selected_sheet == 'na':
        df = df_na
    elif selected_sheet == 'apac':
        df = df_apac
    else:
        return "Invalid sheet selected"

    # Create a DataTable component to display the data
    table = dcc.DataTable(
        id='datatable',
        columns=[
            {'name': col, 'id': col} for col in df.columns
        ],
        data=df.to_dict('records'),
    )

    return table


# Run the app
if __name__ == '__main__':
    app.run_server(debug=True)
